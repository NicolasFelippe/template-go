// Code generated by MockGen. DO NOT EDIT.
// Source: template-go/pkg/uidgen (interfaces: UIDGen)

// Package uidgenmock is a generated GoMock package.
package uidgenmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockUIDGen is a mock of UIDGen interface.
type MockUIDGen struct {
	ctrl     *gomock.Controller
	recorder *MockUIDGenMockRecorder
}

// MockUIDGenMockRecorder is the mock recorder for MockUIDGen.
type MockUIDGenMockRecorder struct {
	mock *MockUIDGen
}

// NewMockUIDGen creates a new mock instance.
func NewMockUIDGen(ctrl *gomock.Controller) *MockUIDGen {
	mock := &MockUIDGen{ctrl: ctrl}
	mock.recorder = &MockUIDGenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUIDGen) EXPECT() *MockUIDGenMockRecorder {
	return m.recorder
}

// IsValidUuid mocks base method.
func (m *MockUIDGen) IsValidUuid(arg0 string) (*uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsValidUuid", arg0)
	ret0, _ := ret[0].(*uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsValidUuid indicates an expected call of IsValidUuid.
func (mr *MockUIDGenMockRecorder) IsValidUuid(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsValidUuid", reflect.TypeOf((*MockUIDGen)(nil).IsValidUuid), arg0)
}

// New mocks base method.
func (m *MockUIDGen) New() uuid.UUID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New")
	ret0, _ := ret[0].(uuid.UUID)
	return ret0
}

// New indicates an expected call of New.
func (mr *MockUIDGenMockRecorder) New() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockUIDGen)(nil).New))
}
